Ext.data.JsonP.Validator({"tagname":"class","name":"Validator","autodetected":{},"files":[{"filename":"simple.js.validator.js","href":"simple.js.validator.html#Validator"}],"type":"SimpleJS.Validator","members":[{"name":"assertIsDefined","tagname":"method","owner":"Validator","id":"method-assertIsDefined","meta":{}},{"name":"assertIsEmpty","tagname":"method","owner":"Validator","id":"method-assertIsEmpty","meta":{}},{"name":"assertIsNotDefined","tagname":"method","owner":"Validator","id":"method-assertIsNotDefined","meta":{}},{"name":"assertIsNotEmpty","tagname":"method","owner":"Validator","id":"method-assertIsNotEmpty","meta":{}},{"name":"isArray","tagname":"method","owner":"Validator","id":"method-isArray","meta":{}},{"name":"isDate","tagname":"method","owner":"Validator","id":"method-isDate","meta":{}},{"name":"isDefined","tagname":"method","owner":"Validator","id":"method-isDefined","meta":{}},{"name":"isEmpty","tagname":"method","owner":"Validator","id":"method-isEmpty","meta":{}},{"name":"isEmptyArray","tagname":"method","owner":"Validator","id":"method-isEmptyArray","meta":{}},{"name":"isError","tagname":"method","owner":"Validator","id":"method-isError","meta":{}},{"name":"isFalse","tagname":"method","owner":"Validator","id":"method-isFalse","meta":{}},{"name":"isNAN","tagname":"method","owner":"Validator","id":"method-isNAN","meta":{}},{"name":"isNotDefined","tagname":"method","owner":"Validator","id":"method-isNotDefined","meta":{}},{"name":"isNotEmpty","tagname":"method","owner":"Validator","id":"method-isNotEmpty","meta":{}},{"name":"isObject","tagname":"method","owner":"Validator","id":"method-isObject","meta":{}},{"name":"isTrue","tagname":"method","owner":"Validator","id":"method-isTrue","meta":{}},{"name":"validateFunctionInputsAreDefined","tagname":"method","owner":"Validator","id":"method-validateFunctionInputsAreDefined","meta":{}},{"name":"validateFunctionInputsAreDefinedAsync","tagname":"method","owner":"Validator","id":"method-validateFunctionInputsAreDefinedAsync","meta":{}},{"name":"validateFunctionInputsAreDefinedCallbackOnError","tagname":"method","owner":"Validator","id":"method-validateFunctionInputsAreDefinedCallbackOnError","meta":{}},{"name":"validateFunctionInputsAreNotEmpty","tagname":"method","owner":"Validator","id":"method-validateFunctionInputsAreNotEmpty","meta":{}},{"name":"validateFunctionInputsAreNotEmptyAsync","tagname":"method","owner":"Validator","id":"method-validateFunctionInputsAreNotEmptyAsync","meta":{}},{"name":"validateFunctionInputsAreNotEmptyCallbackOnError","tagname":"method","owner":"Validator","id":"method-validateFunctionInputsAreNotEmptyCallbackOnError","meta":{}},{"name":"validateInputsAreDefined","tagname":"method","owner":"Validator","id":"method-validateInputsAreDefined","meta":{}},{"name":"validateInputsAreDefinedAsync","tagname":"method","owner":"Validator","id":"method-validateInputsAreDefinedAsync","meta":{}},{"name":"validateInputsAreDefinedCallbackOnError","tagname":"method","owner":"Validator","id":"method-validateInputsAreDefinedCallbackOnError","meta":{}},{"name":"validateInputsAreNotEmpty","tagname":"method","owner":"Validator","id":"method-validateInputsAreNotEmpty","meta":{}},{"name":"validateInputsAreNotEmptyAsync","tagname":"method","owner":"Validator","id":"method-validateInputsAreNotEmptyAsync","meta":{}},{"name":"validateInputsAreNotEmptyCallbackOnError","tagname":"method","owner":"Validator","id":"method-validateInputsAreNotEmptyCallbackOnError","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-Validator","html_type":"SimpleJS.Validator","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/simple.js.validator.html#Validator' target='_blank'>simple.js.validator.js</a></div></pre><div class='doc-contents'><p>Simple.Js.Validator v0.11.0</p>\n\n<p>A collection of simple validations for common actions</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-assertIsDefined' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-assertIsDefined' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-assertIsDefined' class='name expandable'>assertIsDefined</a>( <span class='pre'>toAssertName, toAssertObj</span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Throws an error if the object is not defined (see isNotDefined method for definition). ...</div><div class='long'><p>Throws an error if the object is not defined (see <a href=\"#!/api/Validator-method-isNotDefined\" rel=\"Validator-method-isNotDefined\" class=\"docClass\">isNotDefined</a> method for definition).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>toAssertName</span> : String<div class='sub-desc'><p>The name associated with the object.  This name is used when the error is thrown.</p>\n</div></li><li><span class='pre'>toAssertObj</span> : Object<div class='sub-desc'><p>The object to assert against</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-assertIsEmpty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-assertIsEmpty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-assertIsEmpty' class='name expandable'>assertIsEmpty</a>( <span class='pre'>toAssertName, toAssertObj</span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Throws an error if the object is not empty (see isNotEmpty method for definition). ...</div><div class='long'><p>Throws an error if the object is not empty (see <a href=\"#!/api/Validator-method-isNotEmpty\" rel=\"Validator-method-isNotEmpty\" class=\"docClass\">isNotEmpty</a> method for definition).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>toAssertName</span> : String<div class='sub-desc'><p>The name associated with the object.  This name is used when the error is thrown.</p>\n</div></li><li><span class='pre'>toAssertObj</span> : Object<div class='sub-desc'><p>The object to assert against</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-assertIsNotDefined' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-assertIsNotDefined' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-assertIsNotDefined' class='name expandable'>assertIsNotDefined</a>( <span class='pre'>toAssertName, toAssertObj</span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Throws an error if the object is defined (see isDefined method for definition). ...</div><div class='long'><p>Throws an error if the object is defined (see <a href=\"#!/api/Validator-method-isDefined\" rel=\"Validator-method-isDefined\" class=\"docClass\">isDefined</a> method for definition).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>toAssertName</span> : String<div class='sub-desc'><p>The name associated with the object.  This name is used when the error is thrown.</p>\n</div></li><li><span class='pre'>toAssertObj</span> : Object<div class='sub-desc'><p>The object to assert against</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-assertIsNotEmpty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-assertIsNotEmpty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-assertIsNotEmpty' class='name expandable'>assertIsNotEmpty</a>( <span class='pre'>toAssertName, toAssertObj</span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Throws an error if the object is empty (see isEmpty method for definition). ...</div><div class='long'><p>Throws an error if the object is empty (see <a href=\"#!/api/Validator-method-isEmpty\" rel=\"Validator-method-isEmpty\" class=\"docClass\">isEmpty</a> method for definition).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>toAssertName</span> : String<div class='sub-desc'><p>The name associated with the object.  This name is used when the error is thrown.</p>\n</div></li><li><span class='pre'>toAssertObj</span> : Object<div class='sub-desc'><p>The object to assert against</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isArray' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-isArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-isArray' class='name expandable'>isArray</a>( <span class='pre'>obj</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Determines if the object is an array or not ...</div><div class='long'><p>Determines if the object is an array or not</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object<div class='sub-desc'><p>object to be checked</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if array; otherwise, false</p>\n</div></li></ul></div></div></div><div id='method-isDate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-isDate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-isDate' class='name expandable'>isDate</a>( <span class='pre'>obj</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Determines if the object is a Date or not ...</div><div class='long'><p>Determines if the object is a Date or not</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object<div class='sub-desc'><p>object to be checked</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if Date; otherwise, false</p>\n</div></li></ul></div></div></div><div id='method-isDefined' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-isDefined' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-isDefined' class='name expandable'>isDefined</a>( <span class='pre'>value</span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the value is defined; otherwise, returns false. ...</div><div class='long'><p>Returns <strong><em>true</em></strong> if the value is defined; otherwise, returns <strong><em>false</em></strong>.</p>\n\n<p>Returns <strong><em>false</em></strong> for the following:</p>\n\n<ul>\n<li>typeof undefined</li>\n<li>null</li>\n<li>NaN</li>\n</ul>\n\n\n<p>Returns <strong><em>true</em></strong> for the following:</p>\n\n<ul>\n<li>0</li>\n<li>false</li>\n<li>'' (empty string)</li>\n<li>{} (empty object)</li>\n<li>[] (empty array)</li>\n<li>anything else</li>\n</ul>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p>value to check</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'><p>true if defined; false if not defined</p>\n</div></li></ul></div></div></div><div id='method-isEmpty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-isEmpty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-isEmpty' class='name expandable'>isEmpty</a>( <span class='pre'>value</span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the value is empty; otherwise, returns false. ...</div><div class='long'><p>Returns <strong><em>true</em></strong> if the value is empty; otherwise, returns <strong><em>false</em></strong>.</p>\n\n<p>Returns <strong><em>true</em></strong> for the following:</p>\n\n<ul>\n<li>typeof undefined</li>\n<li>null</li>\n<li>NaN</li>\n<li>'' (empty string)</li>\n<li>{} (empty object)</li>\n<li>[] (empty array)</li>\n</ul>\n\n\n<p>Returns <strong><em>false</em></strong> for the following:</p>\n\n<ul>\n<li>0</li>\n<li>false</li>\n<li>anything else</li>\n</ul>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p>value to check</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'><p>true if empty; false if not empty</p>\n</div></li></ul></div></div></div><div id='method-isEmptyArray' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-isEmptyArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-isEmptyArray' class='name expandable'>isEmptyArray</a>( <span class='pre'>obj</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Determines if the object is an empty array or not ...</div><div class='long'><p>Determines if the object is an empty array or not</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object<div class='sub-desc'><p>object to be checked</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if empty array; otherwise, false</p>\n</div></li></ul></div></div></div><div id='method-isError' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-isError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-isError' class='name expandable'>isError</a>( <span class='pre'>obj</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Determines if the object is an Error or not ...</div><div class='long'><p>Determines if the object is an Error or not</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object<div class='sub-desc'><p>object to be checked</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if Error; otherwise, false</p>\n</div></li></ul></div></div></div><div id='method-isFalse' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-isFalse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-isFalse' class='name expandable'>isFalse</a>( <span class='pre'>value</span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the value is false, \"false\", \"f\", or 0; otherwise, returns false. ...</div><div class='long'><p>Returns <strong><em>true</em></strong> if the value is false, \"false\", \"f\", or 0; otherwise, returns <strong><em>false</em></strong>.</p>\n\n<p>Returns <strong><em>false</em></strong> for the following:</p>\n\n<ul>\n<li>typeof undefined</li>\n<li>null</li>\n<li>NaN</li>\n<li>'' (empty string)</li>\n<li>{} (empty object)</li>\n<li>[] (empty array)</li>\n<li>true</li>\n<li>1</li>\n<li><p>anything else</p></li>\n<li><p>Returns <strong><em>true</em></strong> for the following:</p></li>\n<li><p>false</p></li>\n<li>\"false\"</li>\n<li>\"F\"</li>\n<li>0</li>\n</ul>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p>value to check</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'><p>true if defined; false if not defined</p>\n</div></li></ul></div></div></div><div id='method-isNAN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-isNAN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-isNAN' class='name expandable'>isNAN</a>( <span class='pre'>obj</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Determines if the object is a NaN or not ...</div><div class='long'><p>Determines if the object is a NaN or not</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object<div class='sub-desc'><p>object to be checked</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if NaN; otherwise, false</p>\n</div></li></ul></div></div></div><div id='method-isNotDefined' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-isNotDefined' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-isNotDefined' class='name expandable'>isNotDefined</a>( <span class='pre'>value</span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the value is not defined; otherwise, returns false. ...</div><div class='long'><p>Returns <strong><em>true</em></strong> if the value is not defined; otherwise, returns <strong><em>false</em></strong>.</p>\n\n<p>Returns <strong><em>true</em></strong> for the following:</p>\n\n<ul>\n<li>typeof undefined</li>\n<li>null</li>\n<li>NaN</li>\n</ul>\n\n\n<p>Returns <strong><em>false</em></strong> for the following:</p>\n\n<ul>\n<li>0</li>\n<li>false</li>\n<li>'' (empty string)</li>\n<li>{} (empty object)</li>\n<li>[] (empty array)</li>\n<li>anything else</li>\n</ul>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p>value to check</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'><p>true if not defined; false if defined</p>\n</div></li></ul></div></div></div><div id='method-isNotEmpty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-isNotEmpty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-isNotEmpty' class='name expandable'>isNotEmpty</a>( <span class='pre'>value</span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the value is not empty; otherwise, returns false. ...</div><div class='long'><p>Returns <strong><em>true</em></strong> if the value is not empty; otherwise, returns <strong><em>false</em></strong>.</p>\n\n<p>Returns <strong><em>false</em></strong> for the following:</p>\n\n<ul>\n<li>typeof undefined</li>\n<li>null</li>\n<li>NaN</li>\n<li>'' (empty string)</li>\n<li>{} (empty object)</li>\n<li>[] (empty array)</li>\n</ul>\n\n\n<p>Returns <strong><em>true</em></strong> for the following:</p>\n\n<ul>\n<li>0</li>\n<li>false</li>\n<li>anything else</li>\n</ul>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p>value to check</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'><p>true if not empty; false if empty</p>\n</div></li></ul></div></div></div><div id='method-isObject' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-isObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-isObject' class='name expandable'>isObject</a>( <span class='pre'>obj</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Determines if the object is an Object or not. ...</div><div class='long'><p>Determines if the object is an Object or not.  Note returns false on new Date() and new Error().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object<div class='sub-desc'><p>object to be checked</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if Object; otherwise, false</p>\n</div></li></ul></div></div></div><div id='method-isTrue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-isTrue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-isTrue' class='name expandable'>isTrue</a>( <span class='pre'>value</span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the value is true, \"true\", \"T\", or 1; otherwise, returns false. ...</div><div class='long'><p>Returns <strong><em>true</em></strong> if the value is true, \"true\", \"T\", or 1; otherwise, returns <strong><em>false</em></strong>.</p>\n\n<p>Returns <strong><em>false</em></strong> for the following:</p>\n\n<ul>\n<li>typeof undefined</li>\n<li>null</li>\n<li>NaN</li>\n<li>0</li>\n<li>false</li>\n<li>'' (empty string)</li>\n<li>{} (empty object)</li>\n<li>[] (empty array)</li>\n<li>anything else</li>\n</ul>\n\n\n<p>Returns <strong><em>true</em></strong> for the following:</p>\n\n<ul>\n<li>true</li>\n<li>\"true\"</li>\n<li>\"T\"</li>\n<li>1</li>\n</ul>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p>value to check</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'><p>true if defined; false if not defined</p>\n</div></li></ul></div></div></div><div id='method-validateFunctionInputsAreDefined' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-validateFunctionInputsAreDefined' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-validateFunctionInputsAreDefined' class='name expandable'>validateFunctionInputsAreDefined</a>( <span class='pre'>fnInputs, inputsToValidate, functionName</span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Validates all function inputs are defined. ...</div><div class='long'><p>Validates all function inputs are defined.  It will throw an error if any input is not defined</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fnInputs</span> : Object<div class='sub-desc'><p>object containing all the function inputs</p>\n</div></li><li><span class='pre'>inputsToValidate</span> : Array<div class='sub-desc'><p>a string array of the input names that must be defined in the fnInputs</p>\n</div></li><li><span class='pre'>functionName</span> : String<div class='sub-desc'><p>string identifier of the calling function to output with any error messages</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-validateFunctionInputsAreDefinedAsync' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-validateFunctionInputsAreDefinedAsync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-validateFunctionInputsAreDefinedAsync' class='name expandable'>validateFunctionInputsAreDefinedAsync</a>( <span class='pre'>fnInputs, inputsToValidate, functionName, callback</span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Validates all function inputs are defined. ...</div><div class='long'><p>Validates all function inputs are defined.  It will call the callback with an error or 'done' when finished</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fnInputs</span> : Object<div class='sub-desc'><p>object containing all the function inputs</p>\n</div></li><li><span class='pre'>inputsToValidate</span> : Array<div class='sub-desc'><p>a string array of the input names that must be defined in the fnInputs</p>\n</div></li><li><span class='pre'>functionName</span> : String<div class='sub-desc'><p>string identifier of the calling function to output with any error messages</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>a callback function</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-validateFunctionInputsAreDefinedCallbackOnError' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-validateFunctionInputsAreDefinedCallbackOnError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-validateFunctionInputsAreDefinedCallbackOnError' class='name expandable'>validateFunctionInputsAreDefinedCallbackOnError</a>( <span class='pre'>fnInputs, inputsToValidate, functionName, callback</span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Validates all function inputs are defined. ...</div><div class='long'><p>Validates all function inputs are defined.  It will call the callback only if there is an error.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fnInputs</span> : Object<div class='sub-desc'><p>object containing all the function inputs</p>\n</div></li><li><span class='pre'>inputsToValidate</span> : Array<div class='sub-desc'><p>a string array of the input names that must be defined in the fnInputs</p>\n</div></li><li><span class='pre'>functionName</span> : String<div class='sub-desc'><p>string identifier of the calling function to output with any error messages</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>a callback function</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-validateFunctionInputsAreNotEmpty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-validateFunctionInputsAreNotEmpty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-validateFunctionInputsAreNotEmpty' class='name expandable'>validateFunctionInputsAreNotEmpty</a>( <span class='pre'>fnInputs, inputsToValidate, functionName</span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Validates all function inputs are not empty. ...</div><div class='long'><p>Validates all function inputs are not empty.  It will throw an error if any input is empty</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fnInputs</span> : Object<div class='sub-desc'><p>object containing all the function inputs</p>\n</div></li><li><span class='pre'>inputsToValidate</span> : Array<div class='sub-desc'><p>a string array of the input names that must not be empty in the fnInputs</p>\n</div></li><li><span class='pre'>functionName</span> : String<div class='sub-desc'><p>string identifier of the calling function to output with any error messages</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-validateFunctionInputsAreNotEmptyAsync' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-validateFunctionInputsAreNotEmptyAsync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-validateFunctionInputsAreNotEmptyAsync' class='name expandable'>validateFunctionInputsAreNotEmptyAsync</a>( <span class='pre'>fnInputs, inputsToValidate, functionName, callback</span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Validates all function inputs are not empty. ...</div><div class='long'><p>Validates all function inputs are not empty.  It will call the callback with an error or 'done' when finished</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fnInputs</span> : Object<div class='sub-desc'><p>object containing all the function inputs</p>\n</div></li><li><span class='pre'>inputsToValidate</span> : Array<div class='sub-desc'><p>a string array of the input names that must not be empty in the fnInputs</p>\n</div></li><li><span class='pre'>functionName</span> : String<div class='sub-desc'><p>string identifier of the calling function to output with any error messages</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>a callback function</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-validateFunctionInputsAreNotEmptyCallbackOnError' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-validateFunctionInputsAreNotEmptyCallbackOnError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-validateFunctionInputsAreNotEmptyCallbackOnError' class='name expandable'>validateFunctionInputsAreNotEmptyCallbackOnError</a>( <span class='pre'>fnInputs, inputsToValidate, functionName, callback</span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Validates all function inputs are not empty. ...</div><div class='long'><p>Validates all function inputs are not empty.  It will call the callback only if there is an error.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fnInputs</span> : Object<div class='sub-desc'><p>object containing all the function inputs</p>\n</div></li><li><span class='pre'>inputsToValidate</span> : Array<div class='sub-desc'><p>a string array of the input names that must not be empty in the fnInputs</p>\n</div></li><li><span class='pre'>functionName</span> : String<div class='sub-desc'><p>string identifier of the calling function to output with any error messages</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>a callback function</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-validateInputsAreDefined' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-validateInputsAreDefined' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-validateInputsAreDefined' class='name expandable'>validateInputsAreDefined</a>( <span class='pre'>inputs, inputsToValidate, inputName, functionName</span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Validates all inputs are defined. ...</div><div class='long'><p>Validates all inputs are defined.  It will throw an error if any input is not defined</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>inputs</span> : Object<div class='sub-desc'><p>object containing all the inputs</p>\n</div></li><li><span class='pre'>inputsToValidate</span> : Array<div class='sub-desc'><p>a string array of the input names that must be defined in the inputs</p>\n</div></li><li><span class='pre'>inputName</span> : String<div class='sub-desc'><p>string identifier of the inputs to output with any error messages</p>\n</div></li><li><span class='pre'>functionName</span> : String<div class='sub-desc'><p>string identifier of the calling function to output with any error messages</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-validateInputsAreDefinedAsync' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-validateInputsAreDefinedAsync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-validateInputsAreDefinedAsync' class='name expandable'>validateInputsAreDefinedAsync</a>( <span class='pre'>fnInputs, inputsToValidate, functionName, callback</span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Validates all inputs are defined. ...</div><div class='long'><p>Validates all inputs are defined.  It will call the callback with an error or 'done' when finished</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fnInputs</span> : Object<div class='sub-desc'><p>object containing all the function inputs</p>\n</div></li><li><span class='pre'>inputsToValidate</span> : Array<div class='sub-desc'><p>a string array of the input names that must be defined in the fnInputs</p>\n</div></li><li><span class='pre'>functionName</span> : String<div class='sub-desc'><p>string identifier of the calling function to output with any error messages</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>a callback function</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-validateInputsAreDefinedCallbackOnError' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-validateInputsAreDefinedCallbackOnError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-validateInputsAreDefinedCallbackOnError' class='name expandable'>validateInputsAreDefinedCallbackOnError</a>( <span class='pre'>fnInputs, inputsToValidate, functionName, callback</span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Validates all inputs are defined. ...</div><div class='long'><p>Validates all inputs are defined.  It will call the callback only if there is an error.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fnInputs</span> : Object<div class='sub-desc'><p>object containing all the function inputs</p>\n</div></li><li><span class='pre'>inputsToValidate</span> : Array<div class='sub-desc'><p>a string array of the input names that must be defined in the fnInputs</p>\n</div></li><li><span class='pre'>functionName</span> : String<div class='sub-desc'><p>string identifier of the calling function to output with any error messages</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>a callback function</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-validateInputsAreNotEmpty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-validateInputsAreNotEmpty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-validateInputsAreNotEmpty' class='name expandable'>validateInputsAreNotEmpty</a>( <span class='pre'>inputs, inputsToValidate, inputName, functionName</span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Validates all inputs are not empty. ...</div><div class='long'><p>Validates all inputs are not empty.  It will throw an error if any input is empty</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>inputs</span> : Object<div class='sub-desc'><p>object containing all the inputs</p>\n</div></li><li><span class='pre'>inputsToValidate</span> : Array<div class='sub-desc'><p>a string array of the input names that must not be empty in the inputs</p>\n</div></li><li><span class='pre'>inputName</span> : String<div class='sub-desc'><p>string identifier of the inputs to output with any error messages</p>\n</div></li><li><span class='pre'>functionName</span> : String<div class='sub-desc'><p>string identifier of the calling function to output with any error messages</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-validateInputsAreNotEmptyAsync' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-validateInputsAreNotEmptyAsync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-validateInputsAreNotEmptyAsync' class='name expandable'>validateInputsAreNotEmptyAsync</a>( <span class='pre'>fnInputs, inputsToValidate, inputName, functionName, callback</span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Validates all inputs are not empty. ...</div><div class='long'><p>Validates all inputs are not empty.  It will call the callback with an error or 'done' when finished</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fnInputs</span> : Object<div class='sub-desc'><p>object containing all the inputs</p>\n</div></li><li><span class='pre'>inputsToValidate</span> : Array<div class='sub-desc'><p>a string array of the input names that must not be empty in the inputs</p>\n</div></li><li><span class='pre'>inputName</span> : String<div class='sub-desc'><p>string identifier of the inputs to output with any error messages</p>\n</div></li><li><span class='pre'>functionName</span> : String<div class='sub-desc'><p>string identifier of the calling function to output with any error messages</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>a callback function</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-validateInputsAreNotEmptyCallbackOnError' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Validator'>Validator</span><br/><a href='source/simple.js.validator.html#Validator-method-validateInputsAreNotEmptyCallbackOnError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Validator-method-validateInputsAreNotEmptyCallbackOnError' class='name expandable'>validateInputsAreNotEmptyCallbackOnError</a>( <span class='pre'>fnInputs, inputsToValidate, inputName, functionName, callback</span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Validates all inputs are not empty. ...</div><div class='long'><p>Validates all inputs are not empty.  It will call the callback only if there is an error.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fnInputs</span> : Object<div class='sub-desc'><p>object containing all the inputs</p>\n</div></li><li><span class='pre'>inputsToValidate</span> : Array<div class='sub-desc'><p>a string array of the input names that must not be empty in the inputs</p>\n</div></li><li><span class='pre'>inputName</span> : String<div class='sub-desc'><p>string identifier of the inputs to output with any error messages</p>\n</div></li><li><span class='pre'>functionName</span> : String<div class='sub-desc'><p>string identifier of the calling function to output with any error messages</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>a callback function</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});